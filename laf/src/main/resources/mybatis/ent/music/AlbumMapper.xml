<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="info.doushen.ent.music.mapper.AlbumMapper">

    <select id="count" parameterType="info.doushen.common.utils.Query" resultType="java.lang.Integer">
        SELECT
            count(1)
        FROM
            ent_music_album
        <where>
            <if test="id != null and id != ''"> and id = #{id} </if>
            <if test="name != null and name != ''"> and name = #{name} </if>
            <if test="singerId != null and singerId != ''"> and singer_id = to_number(#{singerId}, '9999999999999999999') </if>
            <if test="type != null and type != ''"> and type = #{type} </if>
        </where>
    </select>

    <select id="list" parameterType="info.doushen.common.utils.Query" resultType="info.doushen.ent.music.entity.AlbumEntity">
        SELECT
            id,
            name,
            singer_id,
            issue_date,
            language,
            type,
            style,
            cover,
            create_by,
            create_time,
            update_by,
            update_time
        FROM
            ent_music_album
        <where>
            <if test="id != null and id != ''"> and id = #{id} </if>
            <if test="name != null and name != ''"> and name = #{name} </if>
            <if test="singerId != null and singerId != ''"> and singer_id = to_number(#{singerId}, '9999999999999999999') </if>
            <if test="type != null and type != ''"> and type = #{type} </if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by id
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{limit} offset #{offset}
        </if>
    </select>

    <insert id="save" parameterType="info.doushen.ent.music.entity.AlbumEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT
        INTO
            ent_music_album
            (
                name,
                singer_id,
                issue_date,
                language,
                type,
                style,
                cover,
                create_by,
                create_time,
                update_by,
                update_time
            )
            VALUES
            (
                #{name},
                #{singerId},
                #{issueDate},
                #{language},
                #{type},
                #{style},
                #{cover},
                #{createBy},
                CURRENT_TIMESTAMP,
                #{createBy},
                CURRENT_TIMESTAMP
            )
    </insert>

    <select id="get" parameterType="java.lang.Integer" resultType="info.doushen.ent.music.entity.AlbumEntity">
        SELECT
            id,
            name,
            singer_id,
            issue_date,
            language,
            type,
            style,
            cover,
            create_by,
            create_time,
            update_by,
            update_time
        FROM
            ent_music_album
        WHERE
            id = #{albumId}
    </select>

    <update id="update" parameterType="info.doushen.ent.music.entity.AlbumEntity">
        UPDATE
            ent_music_album
        SET
            name = #{name},
            singer_id = #{singerId},
            issue_date = #{issueDate},
            language = #{language},
            type = #{type},
            style = #{style},
            cover = #{cover},
            update_by = #{updateBy},
            update_time = CURRENT_TIMESTAMP
        WHERE
            id = #{id}
    </update>

    <select id="querySingerAlbum" parameterType="java.util.Map" resultType="info.doushen.ent.music.entity.AlbumEntity">
        SELECT
            id,
            name,
            singer_id,
            issue_date,
            language,
            type,
            style,
            cover,
            create_by,
            create_time,
            update_by,
            update_time
        FROM
            ent_music_album
        WHERE
            singer_id = #{singerId}
            and name = #{albumName}
    </select>

</mapper>